---
# tasks file for lego

- name: Install lego
  package:
    name: lego
    state: present

- name: Create lego base directory
  file:
    path: "{{ lego_base_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Request dns certificates
  shell:
    cmd: "{{ lego_binary }} --email \"{{ lego_email }}\" --dns {{ lego_dns }} --domains {{ ' --domains '.join(lego_domains | map(attribute='domain') ) }} {{ '--accept-tos' if lego_accept_tos is defined and lego_accept_tos }} {{ '--dns.disable-cp' if lego_disable_cp is defined and lego_disable_cp }} run"
    chdir: "{{ lego_base_dir }}"
    creates: "{{ lego_base_dir }}/.lego/certificates/{{ lego_domains[0].domain }}.crt"
  environment: "{{ lego_env }}"
  when: lego_dns is defined

- name: Set certificate permissions
  file:
    path: "{{ lego_base_dir }}/.lego/certificates/{{ lego_domains[0].domain }}.crt"
    owner: "{{ lego_domains[0].owner | default('root') }}"
    group: "{{ lego_domains[0].group | default('root') }}"
    mode: "{{ lego_domains[0].pubmode | default('0644') }}"

- name: Set key permissions
  file:
    path: "{{ lego_base_dir }}/.lego/certificates/{{ lego_domains[0].domain }}.key"
    owner: "{{ lego_domains[0].owner | default('root') }}"
    group: "{{ lego_domains[0].group | default('root') }}"
    mode: "{{ lego_domains[0].privmode | default('0600') }}"

- name: Set issuer permissions
  file:
    path: "{{ lego_base_dir }}/.lego/certificates/{{ lego_domains[0].domain }}.issuer.crt"
    owner: "{{ lego_domains[0].owner | default('root') }}"
    group: "{{ lego_domains[0].group | default('root') }}"
    mode: "{{ lego_domains[0].pubmode | default('0600') }}"

- name: Set json permissions
  file:
    path: "{{ lego_base_dir }}/.lego/certificates/{{ lego_domains[0].domain }}.json"
    owner: "{{ lego_domains[0].owner | default('root') }}"
    group: "{{ lego_domains[0].group | default('root') }}"
    mode: "{{ lego_domains[0].pubmode | default('0600') }}"

- name: Create renew cronjob
  cron:
    # cron_file: lego-dns-{{ item }}
    name: lego-dns-{{ lego_domains[0].domain }}-renew
    job: "cd {{ lego_base_dir }} && {{ lego_env.keys() | zip(lego_env.values()) | map('join', '=') | join(' ') }} {{ lego_binary }} --email {{ lego_email }} --dns {{ lego_dns }} --domains {{ ' --domains '.join(lego_domains | map(attribute='domain')) }} {{ '--accept-tos' if lego_accept_tos is defined and lego_accept_tos }} {{ '--dns.disable-cp' if lego_disable_cp is defined and lego_disable_cp }} renew"
    hour: "{{ 24 | random(seed=inventory_hostname) }}"
    minute: "{{ 60 | random(seed=inventory_hostname) }}"
    state: present
  when: lego_dns is defined

